{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Returns a function of smaller arity by partially applying arguments from the right.\n*\n* @param {Function} fcn - function to partially apply\n* @param {...*} [args] - arguments to partially apply\n* @throws {TypeError} first argument must be a function\n* @returns {Function} partially applied function\n*\n* @example\n* function say( text, name ) {\n*     return text + ', ' + name + '.';\n* }\n*\n* var toGrace = papplyRight( say, 'Grace Hopper' );\n*\n* var str = toGrace( 'Hello' );\n* // returns 'Hello, Grace Hopper.'\n*\n* str = toGrace( 'Thank you' );\n* // returns 'Thank you, Grace Hopper.'\n*/\nfunction papplyRight( fcn ) {\n\tvar pargs;\n\tvar len;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( '1WV3c,J9', fcn ) );\n\t}\n\tlen = arguments.length - 1;\n\tpargs = new Array( len );\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\tpargs[ i-1 ] = arguments[ i ];\n\t}\n\treturn pappliedRight;\n\n\t/**\n\t* Partially applied function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {*} partially applied function result\n\t*/\n\tfunction pappliedRight() {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar j;\n\t\tnargs = arguments.length;\n\t\targs = new Array( len+nargs );\n\t\tfor ( j = 0; j < args.length; j++ ) {\n\t\t\tif ( j >= nargs ) {\n\t\t\t\targs[ j ] = pargs[ j-nargs ];\n\t\t\t} else {\n\t\t\t\targs[ j ] = arguments[ j ];\n\t\t\t}\n\t\t}\n\t\treturn fcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default papplyRight;\n"],"names":["papplyRight","fcn","pargs","len","i","isFunction","TypeError","format","arguments","length","Array","pappliedRight","nargs","args","j","apply"],"mappings":";;8LAiDA,SAASA,EAAaC,GACrB,IAAIC,EACAC,EACAC,EACJ,IAAMC,EAAYJ,GACjB,MAAM,IAAIK,UAAWC,EAAQ,WAAYN,IAI1C,IAFAE,EAAMK,UAAUC,OAAS,EACzBP,EAAQ,IAAIQ,MAAOP,GACbC,EAAI,EAAGA,EAAII,UAAUC,OAAQL,IAClCF,EAAOE,EAAE,GAAMI,UAAWJ,GAE3B,OAAOO,EASP,SAASA,IACR,IAAIC,EACAC,EACAC,EAGJ,IAFAF,EAAQJ,UAAUC,OAClBI,EAAO,IAAIH,MAAOP,EAAIS,GAChBE,EAAI,EAAGA,EAAID,EAAKJ,OAAQK,IAE5BD,EAAMC,GADFA,GAAKF,EACGV,EAAOY,EAAEF,GAETJ,UAAWM,GAGzB,OAAOb,EAAIc,MAAO,KAAMF,EACxB,CACF"}